name: ci

on:
    push:
        branches:
            - "**"
        tags:
            - "v*"
    pull_request:
        branches:
            - "master"
    workflow_dispatch:

permissions:
    packages: write
    contents: read

concurrency:
    group: ci-${{ github.ref }}
    cancel-in-progress: true

jobs:
    native:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 22
            - run: npm ci
            - run: npm run lint
            - run: npm run typecheck
            - run: npm run test

    docker-meta:
        if: ${{ github.event_name != 'pull_request' }}
        runs-on: ubuntu-latest
        outputs:
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
        steps:
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: |
                      ghcr.io/${{ github.repository_owner }}/cross-seed
                      crossseed/cross-seed
                  tags: |
                      type=semver,pattern=version-{{version}}
                      type=semver,pattern={{version}}
                      type=semver,pattern={{major}}.{{minor}}
                      type=semver,pattern={{major}}
                      type=ref,event=branch
                      type=ref,event=pr

    docker-build:
        if: ${{ github.event_name != 'pull_request' }}
        needs: docker-meta
        environment: Docker Hub
        strategy:
            fail-fast: false
            matrix:
                include:
                    - arch: amd64
                      runner: ubuntu-latest
                      platform: linux/amd64
                      suffix: -amd64
                    - arch: arm64
                      runner: ubuntu-24.04-arm
                      platform: linux/arm64
                      suffix: -arm64
        runs-on: ${{ matrix.runner }}
        steps:
            - uses: actions/checkout@v4
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Prepare tags
              id: tags
              env:
                  TAGS: ${{ needs.docker-meta.outputs.tags }}
                  SUFFIX: ${{ matrix.suffix }}
              run: |
                  set -euo pipefail
                  tags=""
                  while IFS= read -r tag; do
                      [ -z "$tag" ] && continue
                      tags="${tags}${tag}${SUFFIX}"$'\n'
                  done <<< "$TAGS"
                  tags="${tags%$'\n'}"
                  if [ -z "$tags" ]; then
                      echo "No tags discovered from docker-meta output" >&2
                      exit 1
                  fi
                  printf 'tags<<EOF\n%s\nEOF\n' "$tags" >> "$GITHUB_OUTPUT"
            - name: Build and push (${{ matrix.arch }})
              uses: docker/build-push-action@v5
              with:
                  push: true
                  platforms: ${{ matrix.platform }}
                  tags: ${{ steps.tags.outputs.tags }}
                  labels: ${{ needs.docker-meta.outputs.labels }}

    docker-manifest:
        if: ${{ github.event_name != 'pull_request' }}
        needs:
            - docker-meta
            - docker-build
        environment: Docker Hub
        runs-on: ubuntu-latest
        steps:
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Create multi-architecture manifests
              env:
                  TAGS: ${{ needs.docker-meta.outputs.tags }}
              run: |
                  set -euo pipefail
                  while IFS= read -r tag; do
                      [ -z "$tag" ] && continue
                      docker buildx imagetools create --tag "${tag}" "${tag}-amd64" "${tag}-arm64"
                  done <<< "$TAGS"
